#!/usr/bin/env python3
"""
Plot UWB waveforms (IQ data) generated by the TL system
"""

import numpy as np
import matplotlib.pyplot as plt
from ftl.signal import SignalConfig, gen_hrp_burst, gen_uwb_pulse, gen_zc_burst, compute_rms_bandwidth

# Configure signal
cfg = SignalConfig()

# Generate HRP-UWB burst
hrp = gen_hrp_burst(cfg, n_repeats=3)

# Generate single UWB pulse for detail view
pulse = gen_uwb_pulse(cfg.sample_rate, cfg.bandwidth)

# Generate Zadoff-Chu burst
zc = gen_zc_burst(cfg, n_repeats=3)

# Time axes
t_hrp = np.arange(len(hrp)) / cfg.sample_rate * 1e9  # nanoseconds
t_pulse = np.arange(len(pulse)) / cfg.sample_rate * 1e9  # nanoseconds
t_zc = np.arange(len(zc)) / cfg.sample_rate * 1e9  # nanoseconds

# Create figure with subplots
fig, axes = plt.subplots(3, 2, figsize=(14, 10))
fig.suptitle('UWB Waveforms - IQ Data', fontsize=14, fontweight='bold')

# Plot 1: HRP-UWB I/Q components
ax = axes[0, 0]
ax.plot(t_hrp, np.real(hrp), 'b-', label='I (In-phase)', alpha=0.7)
ax.plot(t_hrp, np.imag(hrp), 'r-', label='Q (Quadrature)', alpha=0.7)
ax.set_xlabel('Time (ns)')
ax.set_ylabel('Amplitude')
ax.set_title('HRP-UWB Burst - IQ Components')
ax.legend()
ax.grid(True, alpha=0.3)

# Plot 2: HRP-UWB magnitude and phase
ax = axes[0, 1]
ax.plot(t_hrp, np.abs(hrp), 'g-', label='Magnitude')
ax.set_xlabel('Time (ns)')
ax.set_ylabel('Magnitude')
ax.set_title('HRP-UWB Burst - Magnitude')
ax.grid(True, alpha=0.3)
ax.legend()

# Plot 3: Single UWB pulse detail
ax = axes[1, 0]
ax.plot(t_pulse, pulse, 'b-', linewidth=2)
ax.set_xlabel('Time (ns)')
ax.set_ylabel('Amplitude')
ax.set_title(f'Single UWB Pulse (Gaussian Monocycle)')
ax.grid(True, alpha=0.3)
ax.set_xlim([-1, 1])  # Zoom in to see pulse shape

# Plot 4: Pulse spectrum
ax = axes[1, 1]
from scipy.fft import fft, fftfreq
pulse_fft = fft(pulse)
freqs = fftfreq(len(pulse), 1/cfg.sample_rate) / 1e9  # GHz
positive_freqs = freqs[:len(freqs)//2]
ax.plot(positive_freqs, 20*np.log10(np.abs(pulse_fft[:len(freqs)//2])), 'b-')
ax.set_xlabel('Frequency (GHz)')
ax.set_ylabel('Magnitude (dB)')
ax.set_title(f'UWB Pulse Spectrum (BW: {cfg.bandwidth/1e6:.0f} MHz)')
ax.grid(True, alpha=0.3)
ax.set_xlim([0, 10])

# Plot 5: Zadoff-Chu I/Q
ax = axes[2, 0]
ax.plot(t_zc[:1000], np.real(zc[:1000]), 'b-', label='I', alpha=0.7)
ax.plot(t_zc[:1000], np.imag(zc[:1000]), 'r-', label='Q', alpha=0.7)
ax.set_xlabel('Time (ns)')
ax.set_ylabel('Amplitude')
ax.set_title('Zadoff-Chu Sequence - IQ Components')
ax.legend()
ax.grid(True, alpha=0.3)

# Plot 6: Constellation diagram for ZC
ax = axes[2, 1]
# Sample a portion of ZC sequence for constellation
zc_sample = zc[cfg.cyclic_prefix_length:cfg.cyclic_prefix_length+cfg.sequence_length]
ax.scatter(np.real(zc_sample), np.imag(zc_sample), alpha=0.5, s=20)
ax.set_xlabel('I (In-phase)')
ax.set_ylabel('Q (Quadrature)')
ax.set_title('Zadoff-Chu Constellation (CAZAC property)')
ax.grid(True, alpha=0.3)
ax.axis('equal')
circle = plt.Circle((0, 0), 1, fill=False, color='r', linestyle='--', alpha=0.5)
ax.add_patch(circle)

plt.tight_layout()

# Calculate and print signal properties
print("\n" + "="*60)
print("UWB SIGNAL PROPERTIES")
print("="*60)

print("\nConfiguration:")
print(f"  Carrier frequency: {cfg.carrier_freq/1e9:.1f} GHz")
print(f"  Nominal bandwidth: {cfg.bandwidth/1e6:.1f} MHz")
print(f"  Sample rate: {cfg.sample_rate/1e9:.1f} GHz")
print(f"  Burst duration: {cfg.burst_duration*1e6:.1f} μs")

print("\nHRP-UWB Burst:")
print(f"  Duration: {len(hrp)/cfg.sample_rate*1e6:.1f} μs")
print(f"  Peak amplitude: {np.max(np.abs(hrp)):.3f}")
beta_rms_hrp = compute_rms_bandwidth(hrp, cfg.sample_rate)
print(f"  RMS bandwidth: {beta_rms_hrp/1e6:.1f} MHz")
print(f"  Effective time resolution: {1/(2*np.pi*beta_rms_hrp)*1e12:.1f} ps")

print("\nZadoff-Chu Sequence:")
print(f"  Sequence length: {cfg.sequence_length}")
print(f"  Cyclic prefix: {cfg.cyclic_prefix_length} samples")
print(f"  CAZAC property verified: Constant amplitude = {np.std(np.abs(zc_sample)) < 0.01}")

# Save the plot
plt.savefig('uwb_waveforms.png', dpi=150, bbox_inches='tight')
print("\nPlot saved as uwb_waveforms.png")